apiVersion: v1
kind: PersistentVolume
metadata:
  name: iconrepo-nodejs-pv
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 5Gi
  hostPath:
    path: /data/iconrepo-nodejs/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: iconrepo-nodejs-pv-claim
spec:
  storageClassName: ""
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: iconrepo-nodejs
  labels:
    app: iconrepo-nodejs
spec:
  selector:
    app: iconrepo-nodejs
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iconrepo-nodejs
  name: iconrepo-nodejs
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: iconrepo-nodejs
  template:
    metadata:
      labels:
        app: iconrepo-nodejs
    spec:
      initContainers:
      - name: volume-permission
        image: busybox
        command: ["sh", "-c", "chown -R 1101:1101 /data"]
        volumeMounts:
          - mountPath: /data
            name: iconrepo-nodejs
      containers:
      - image: iconrepo-nodejs:latest
        imagePullPolicy: Never
        name: iconrepo-nodejs
        env:
        - name: ICONREPO_DEFAULT_LOG_LEVEL
          value: debug
        - name: ICONREPO_CONFIG_FILE
          value: ""
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PORT
          value: "8080"
        - name: CONN_HOST
          value: postgres
        - name: AUTHENTICATION_TYPE
          value: oidc
        - name: OIDC_CLIENT_ID
          value: iconrepo-nodejs
        - name: OIDC_CLIENT_REDIRECT_BACK_URL
          value: http://iconrepo-nodejs.local.com/oidc-callback
        - name: OIDC_TOKEN_ISSUER
          value: http://keycloak:8080/realms/my-realm
        - name: OIDC_IP_LOGOUT_URL
          value: http://keycloak:8080/realms/my-realm/protocol/openid-connect/logout
        - name: OIDC_CLIENT_SECRET
          valueFrom:
           secretKeyRef:
             name: iconrepo-nodejs
             key: OIDC_CLIENT_SECRET
        - name: ICON_DATA_LOCATION_GIT
          value: /data/git-repo
        - name: GITLAB_ACCESS_TOKEN
          valueFrom:
           secretKeyRef:
             name: iconrepo-nodejs
             key: GITLAB_ACCESS_TOKEN
        - name: DYNAMODB_URL
          value: http://dynamodb:8000 # local
          # value: "-" # the "real" aws service
          # value: "" # Use postgres for indexing (instead of dynamodb)
        - name: AWS_REGION
          value: eu-west-1
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
           secretKeyRef:
             name: iconrepo-nodejs
             key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
           secretKeyRef:
             name: iconrepo-nodejs
             key: AWS_SECRET_ACCESS_KEY
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /app-info
            port: 8080
        resources:
          requests:
            memory: "1024Mi"
            cpu: "500m"
          limits:
            memory: "2048Mi"
            cpu: "500m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: iconrepo-nodejs
          mountPath: /data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: secrets-volume
        - name: iconrepo-nodejs
          persistentVolumeClaim:
            claimName: iconrepo-nodejs-pv-claim
          