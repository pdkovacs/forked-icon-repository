{
  "name": "cxn-icon-repository-backend",
  "version": "0.0.1",
  "description": "Serves icon information to, and accepts updates on icons from, the front-end",
  "main": "build/app.js",
  "dependencies": {
    "base64url": "^3.0.0",
    "body-parser": "^1.18.2",
    "consolidate": "^0.13.1",
    "cookie-parser": "^1.4.3",
    "cookie-session": "^2.0.0-beta.3",
    "cors": "^2.8.4",
    "express": "^4.16.2",
    "express-session": "^1.15.6",
    "helmet": "^3.12.0",
    "immutable": "^3.8.2",
    "jsrsasign": "^5.1.0",
    "lodash": "^4.17.5",
    "multer": "^1.3.1",
    "node-fetch": "^2.1.1",
    "nosql": "^3.2.0",
    "pg": "^7.4.1",
    "qs": "^6.5.1",
    "rxjs": "^5.5.6",
    "session-memory-store": "git://github.com/pdkovacs/session-memory-store.git#09a1651d0c5d0a69252a265a7e7449f805764b01",
    "source-map-support": "^0.5.4",
    "superagent": "^3.8.3",
    "underscore.string": "^3.3.4",
    "winston": "^2.4.3"
  },
  "devDependencies": {
    "@types/base64url": "^2.0.3",
    "@types/consolidate": "0.0.33",
    "@types/cookie-parser": "^1.4.1",
    "@types/cookie-session": "^2.0.34",
    "@types/express": "^4.16.0",
    "@types/express-session": "^1.15.10",
    "@types/helmet": "0.0.37",
    "@types/jasmine": "^2.8.8",
    "@types/lodash": "^4.14.110",
    "@types/multer": "^1.3.7",
    "@types/node": "^7.0.67",
    "@types/node-fetch": "^1.6.7",
    "@types/pg": "^7.4.10",
    "@types/qs": "^6.5.1",
    "@types/rimraf": "^2.0.2",
    "@types/superagent": "^3.8.2",
    "@types/underscore.string": "0.0.32",
    "@types/winston": "^2.3.0",
    "concurrently": "^3.6.0",
    "jasmine": "^3.1.0",
    "nodemon": "^1.12.1",
    "rimraf": "^2.6.2",
    "ts-mocks": "^2.1.0",
    "tslint": "^5.6.0",
    "typescript": "^2.9.2"
  },
  "scripts": {
    "lint": "tslint -c tslint.json '{src,integration-tests,scripts}/**/*.ts'",
    "compile": "rm -rf build && tsc && cp -r configurations build/",
    "watch:tests": "export ICON_REPO_CONFIG_PROFILE=dev; npm run compile && concurrently --kill-others \"tsc --watch\" \"nodemon --watch build run-tests.js\"",
    "import": "npm run compile && node build/scripts/import.js",
    "dev:import": "export ICON_REPO_CONFIG_PROFILE=dev; npm run import",
    "dev": "export ICON_REPO_CONFIG_PROFILE=dev npm run compile && concurrently --kill-others \"tsc --watch\" \"nodemon --watch build build/src/app.js\"",
    "dev:oidc": "export ICON_REPO_CONFIG_PROFILE=dev-oidc-wcontext npm run compile && concurrently --kill-others \"tsc --watch\" \"nodemon --watch build build/src/app.js\"",
    "clean:dist": "rm -rf docker/dist && mkdir -p docker/dist/backend && mkdir -p docker/dist/frontend",
    "test": "export ICON_REPO_CONFIG_PROFILE=dev; npm run lint && npm run compile && node run-tests.js",
    "build:backend": "rm -rf build && npm run test",
    "dist:backend": "npm run build:backend && npm run clean:dist && cp -a package*.json docker/dist/backend/ && cp -a build/src/* docker/dist/backend/",
    "dist:frontend": "cd ../client/ && rm -rf dist && npm run build && cd - && cp -a ../client/dist/* docker/dist/frontend/",
    "dist:all": "npm run dist:backend && npm run dist:frontend",
    "build:docker": "npm run dist:all && cd docker && docker build -t cxn/icon-repo-app .",
    "pack": "npm run dist:all && tar -C docker/dist -czf icon-repo-app.tgz --exclude '.DS_Store' backend frontend",
    "start:docker": "pwd && ls -al && node app.js",
    "db:createTables": "npm run compile && node -e 'require(\"./build/scripts/create-schema\").default();'"
  },
  "author": "peter.dunay.kovacs@gmail.com",
  "license": "Apache-2.0"
}
